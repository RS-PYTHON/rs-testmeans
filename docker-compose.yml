networks:
  default:
    name: rspy-network

services:

  postgres:
    image: postgres:15-alpine
    container_name: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    # variables are set in the .env file
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  prefect-server:
    image: ghcr.io/rs-python/prefect/rs-client-libraries/local:latest
    ports:
      - 4200:4200
    depends_on:
      - postgres
    environment:
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    command: ["prefect", "server", "start"]
    healthcheck:
      test: ["CMD-SHELL", "python3 -c \"import requests; assert requests.get('http://127.0.0.1:4200/api/health').ok\""]
      interval: 2s
      retries: 10

  prefect-worker-staging:
    image: ghcr.io/rs-python/prefect/rs-client-libraries/local:latest
    depends_on:
      prefect-server:
        condition: service_healthy
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
    command: ["prefect", "worker", "start", "--pool", "$PREFECT_WORK_POOL_STAGING", "--type", "process"]
    deploy:
      mode: replicated
      replicas: 1

  # test-python:
  #   image: python:3.11.7-alpine
  #   volumes:
  #     - ./testci.py:/testci.py
  #   command: [sh, -c, "pip install requests && python3 /testci.py"] 